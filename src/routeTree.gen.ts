/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AuthImport } from './routes/_auth'
import { Route as AuthBackofficeImport } from './routes/_auth/backoffice'
import { Route as AuthBackofficeIndexImport } from './routes/_auth/backoffice/index'
import { Route as AuthHomeIndexImport } from './routes/_auth/_home/index'
import { Route as AuthHelpHelpImport } from './routes/_auth/_help/help'
import { Route as AuthBackofficeSettingsIndexImport } from './routes/_auth/backoffice/settings/index'
import { Route as AuthHelpHelpHelpIdImport } from './routes/_auth/_help/help.$helpId'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthBackofficeRoute = AuthBackofficeImport.update({
  id: '/backoffice',
  path: '/backoffice',
  getParentRoute: () => AuthRoute,
} as any)

const AuthBackofficeIndexRoute = AuthBackofficeIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthBackofficeRoute,
} as any)

const AuthHomeIndexRoute = AuthHomeIndexImport.update({
  id: '/_home/',
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthHelpHelpRoute = AuthHelpHelpImport.update({
  id: '/_help/help',
  path: '/help',
  getParentRoute: () => AuthRoute,
} as any)

const AuthBackofficeSettingsIndexRoute =
  AuthBackofficeSettingsIndexImport.update({
    id: '/settings/',
    path: '/settings/',
    getParentRoute: () => AuthBackofficeRoute,
  } as any)

const AuthHelpHelpHelpIdRoute = AuthHelpHelpHelpIdImport.update({
  id: '/$helpId',
  path: '/$helpId',
  getParentRoute: () => AuthHelpHelpRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_auth/backoffice': {
      id: '/_auth/backoffice'
      path: '/backoffice'
      fullPath: '/backoffice'
      preLoaderRoute: typeof AuthBackofficeImport
      parentRoute: typeof AuthImport
    }
    '/_auth/_help/help': {
      id: '/_auth/_help/help'
      path: '/help'
      fullPath: '/help'
      preLoaderRoute: typeof AuthHelpHelpImport
      parentRoute: typeof AuthImport
    }
    '/_auth/_home/': {
      id: '/_auth/_home/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthHomeIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/backoffice/': {
      id: '/_auth/backoffice/'
      path: '/'
      fullPath: '/backoffice/'
      preLoaderRoute: typeof AuthBackofficeIndexImport
      parentRoute: typeof AuthBackofficeImport
    }
    '/_auth/_help/help/$helpId': {
      id: '/_auth/_help/help/$helpId'
      path: '/$helpId'
      fullPath: '/help/$helpId'
      preLoaderRoute: typeof AuthHelpHelpHelpIdImport
      parentRoute: typeof AuthHelpHelpImport
    }
    '/_auth/backoffice/settings/': {
      id: '/_auth/backoffice/settings/'
      path: '/settings'
      fullPath: '/backoffice/settings'
      preLoaderRoute: typeof AuthBackofficeSettingsIndexImport
      parentRoute: typeof AuthBackofficeImport
    }
  }
}

// Create and export the route tree

interface AuthBackofficeRouteChildren {
  AuthBackofficeIndexRoute: typeof AuthBackofficeIndexRoute
  AuthBackofficeSettingsIndexRoute: typeof AuthBackofficeSettingsIndexRoute
}

const AuthBackofficeRouteChildren: AuthBackofficeRouteChildren = {
  AuthBackofficeIndexRoute: AuthBackofficeIndexRoute,
  AuthBackofficeSettingsIndexRoute: AuthBackofficeSettingsIndexRoute,
}

const AuthBackofficeRouteWithChildren = AuthBackofficeRoute._addFileChildren(
  AuthBackofficeRouteChildren,
)

interface AuthHelpHelpRouteChildren {
  AuthHelpHelpHelpIdRoute: typeof AuthHelpHelpHelpIdRoute
}

const AuthHelpHelpRouteChildren: AuthHelpHelpRouteChildren = {
  AuthHelpHelpHelpIdRoute: AuthHelpHelpHelpIdRoute,
}

const AuthHelpHelpRouteWithChildren = AuthHelpHelpRoute._addFileChildren(
  AuthHelpHelpRouteChildren,
)

interface AuthRouteChildren {
  AuthBackofficeRoute: typeof AuthBackofficeRouteWithChildren
  AuthHelpHelpRoute: typeof AuthHelpHelpRouteWithChildren
  AuthHomeIndexRoute: typeof AuthHomeIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthBackofficeRoute: AuthBackofficeRouteWithChildren,
  AuthHelpHelpRoute: AuthHelpHelpRouteWithChildren,
  AuthHomeIndexRoute: AuthHomeIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/backoffice': typeof AuthBackofficeRouteWithChildren
  '/help': typeof AuthHelpHelpRouteWithChildren
  '/': typeof AuthHomeIndexRoute
  '/backoffice/': typeof AuthBackofficeIndexRoute
  '/help/$helpId': typeof AuthHelpHelpHelpIdRoute
  '/backoffice/settings': typeof AuthBackofficeSettingsIndexRoute
}

export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/help': typeof AuthHelpHelpRouteWithChildren
  '/': typeof AuthHomeIndexRoute
  '/backoffice': typeof AuthBackofficeIndexRoute
  '/help/$helpId': typeof AuthHelpHelpHelpIdRoute
  '/backoffice/settings': typeof AuthBackofficeSettingsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/login': typeof LoginRoute
  '/_auth/backoffice': typeof AuthBackofficeRouteWithChildren
  '/_auth/_help/help': typeof AuthHelpHelpRouteWithChildren
  '/_auth/_home/': typeof AuthHomeIndexRoute
  '/_auth/backoffice/': typeof AuthBackofficeIndexRoute
  '/_auth/_help/help/$helpId': typeof AuthHelpHelpHelpIdRoute
  '/_auth/backoffice/settings/': typeof AuthBackofficeSettingsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/backoffice'
    | '/help'
    | '/'
    | '/backoffice/'
    | '/help/$helpId'
    | '/backoffice/settings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/help'
    | '/'
    | '/backoffice'
    | '/help/$helpId'
    | '/backoffice/settings'
  id:
    | '__root__'
    | '/_auth'
    | '/login'
    | '/_auth/backoffice'
    | '/_auth/_help/help'
    | '/_auth/_home/'
    | '/_auth/backoffice/'
    | '/_auth/_help/help/$helpId'
    | '/_auth/backoffice/settings/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/login"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/backoffice",
        "/_auth/_help/help",
        "/_auth/_home/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_auth/backoffice": {
      "filePath": "_auth/backoffice.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/backoffice/",
        "/_auth/backoffice/settings/"
      ]
    },
    "/_auth/_help/help": {
      "filePath": "_auth/_help/help.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/_help/help/$helpId"
      ]
    },
    "/_auth/_home/": {
      "filePath": "_auth/_home/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/backoffice/": {
      "filePath": "_auth/backoffice/index.tsx",
      "parent": "/_auth/backoffice"
    },
    "/_auth/_help/help/$helpId": {
      "filePath": "_auth/_help/help.$helpId.tsx",
      "parent": "/_auth/_help/help"
    },
    "/_auth/backoffice/settings/": {
      "filePath": "_auth/backoffice/settings/index.tsx",
      "parent": "/_auth/backoffice"
    }
  }
}
ROUTE_MANIFEST_END */
